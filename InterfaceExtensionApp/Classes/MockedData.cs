using InterfaceExtensionApp.Interfaces;
using InterfaceExtensionApp.Models;

namespace InterfaceExtensionApp.Classes;

internal class MockedData
{
    /// <summary>
    /// Creates a list of human objects implementing the <see cref="IHuman"/> interface.
    /// </summary>
    /// <returns>A list of <see cref="IHuman"/> objects, including instances of <see cref="Person"/> and <see cref="Customer"/>.</returns>
    /// <remarks>
    /// The returned list contains predefined data representing various human entities.
    /// Each <see cref="ICustomer"/> in the list is assigned a unique account number using the <see cref="SetAccountNumber"/> method.
    /// </remarks>
    public static List<IHuman> GetHumans()
    {
        var list = new List<IHuman>
        {

            new Person()
            {
                Id = 1,
                FirstName = "John",
                LastName = "Doe",
                DateOfBirth = new DateOnly(1980, 1, 1),
                Gender = Gender.Male,
                Language = Language.English
            },
            new Customer()
            {
                Id = 2,
                FirstName = "Jane",
                LastName = "Smith",
                DateOfBirth = new DateOnly(1990, 12, 7),
                Gender = Gender.Female,
                Language = Language.Vietnamese
            },
            new Customer()
            {
                Id = 2,
                FirstName = "Jim",
                LastName = "Heron",
                DateOfBirth = new DateOnly(1967, 1, 12),
                Gender = Gender.Male,
                Language = Language.Russian
            }
        };

        SetAccountNumber(list);

        return list;
    }

    /// <summary>
    /// Assigns unique account numbers to all objects in the provided list that implement the <see cref="ICustomer"/> interface.
    /// </summary>
    /// <param name="list">The list of <see cref="IHuman"/> objects to process.</param>
    /// <remarks>
    /// Each <see cref="ICustomer"/> in the list will receive a unique account number in sequential order.
    /// The account number is generated by incrementing a base string value.
    /// </remarks>
    public static void SetAccountNumber(List<IHuman> list)
    {
        string accountNumber = "A00000";
        foreach (var human in list)
        {
            if (human is not ICustomer customer) continue;

            accountNumber = accountNumber.NextValue();
            customer.Account = accountNumber;

        }
    }
}