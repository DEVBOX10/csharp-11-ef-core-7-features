// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using FormattableStringsSamplesApp.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;


namespace FormattableStringsSamplesApp.Data
{

    public partial class Context
    {
        private IContextProcedures _procedures;

        public virtual IContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new ContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public IContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<usp_HolidaysForMonthYearResult>().HasNoKey().ToView(null);
        }
    }

    /// <summary>
    /// Represents a set of procedures associated with the <see cref="Context"/> class.
    /// </summary>
    public partial class ContextProcedures : IContextProcedures
    {
        private readonly Context _context;

        /// <summary>
        /// Initializes a new instance of the <see cref="ContextProcedures"/> class.
        /// </summary>
        /// <param name="context">The <see cref="Context"/> instance.</param>
        public ContextProcedures(Context context)
        {
            _context = context;
        }

        /// <summary>
        /// Executes the stored procedure "usp_HolidaysForMonthYear" asynchronously.
        /// </summary>
        /// <param name="returnValue">The output parameter to capture the return value of the stored procedure.</param>
        /// <param name="cancellationToken">The cancellation token.</param>
        /// <returns>A list of <see cref="usp_HolidaysForMonthYearResult"/> objects.</returns>
        public virtual async Task<List<usp_HolidaysForMonthYearResult>> usp_HolidaysForMonthYearAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new[]
            {
                    parameterreturnValue,
                };
            var _ = await _context.SqlQueryAsync<usp_HolidaysForMonthYearResult>("EXEC @returnValue = [dbo].[usp_HolidaysForMonthYear]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
